# -*- coding: utf-8 -*-
"""Copia de Untitled19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xkwS7ib4W-7-92Q4_9Q9Cd1PD4y-0NEu
"""

def generador_congruencial_lineal(semilla, a, c, m, n):
    """
    SEBASTIÁN ESCÁRPITA SÁNCHEZ
    Genera n números aleatorios. Método Congruencial Lineal.

    Parámetros:
    semilla: Valor inicial (X0)
    a: Multiplicador
    c: Incremento
    m: Módulo
    n: Cantidad de números aleatorios a generar
    Lista de n números aleatorios entre 0 y 1
    """

    numeros_aleatorios = []

    x = semilla

    for i in range(n):

        x = (a * x + c) % m

        # Convertir a un valor entre 0 y 1
        numero_aleatorio = x / m

        numeros_aleatorios.append(numero_aleatorio)

    return numeros_aleatorios

semilla = 42       # Valor inicial (semilla)
a = 1664525        # Multiplicador
c = 1013904223     # Incremento
m = 2**32          # Módulo (usar una potencia de 2 es común)
n = 100            # Cantidad de números aleatorios a generar


numeros_aleatorios = generador_congruencial_lineal(semilla, a, c, m, n)

print("100 números aleatorios generados usando el Método Congruencial Lineal:")
for i, num in enumerate(numeros_aleatorios, 1):
    print(f"Número {i}: {num}")

print("\nEstadísticas:")
print(f"Valor mínimo: {min(numeros_aleatorios)}")
print(f"Valor máximo: {max(numeros_aleatorios)}")
print(f"Valor promedio: {sum(numeros_aleatorios)/len(numeros_aleatorios)}")